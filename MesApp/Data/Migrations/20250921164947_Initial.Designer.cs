// <auto-generated />
using System;
using MesApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MesApp.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250921164947_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("MesApp.Domain.BusinessPartner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BusinessPartners");
                });

            modelBuilder.Entity("MesApp.Domain.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Spec")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("MesApp.Domain.LabTestRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("External")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExternalLabName")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaterialReceiptId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RequestedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tests")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MaterialReceiptId");

                    b.ToTable("LabTestRequests");
                });

            modelBuilder.Entity("MesApp.Domain.LabTestResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("LabTestRequestId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Pass")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProtocolNo")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReportFilePath")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LabTestRequestId");

                    b.ToTable("LabTestResults");
                });

            modelBuilder.Entity("MesApp.Domain.MaterialReceipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CertFilePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("CertNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Grade")
                        .HasColumnType("TEXT");

                    b.Property<string>("HeatNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Qty")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReceivedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Size")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("SupplierId");

                    b.ToTable("MaterialReceipts");
                });

            modelBuilder.Entity("MesApp.Domain.PrepJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Kind")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaterialReceiptId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MaterialReceiptId");

                    b.ToTable("PrepJobs");
                });

            modelBuilder.Entity("MesApp.Domain.QcInspection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FinalDecision")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Inspector")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaterialReceiptId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remarks")
                        .HasColumnType("TEXT");

                    b.Property<bool>("RequiresPpsd")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RequiresUltrasonic")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stage")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MaterialReceiptId");

                    b.ToTable("QcInspections");
                });

            modelBuilder.Entity("MesApp.Domain.RoutingOperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("QcGate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Seq")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkCenterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("RoutingOperations");
                });

            modelBuilder.Entity("MesApp.Domain.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("MesApp.Domain.WorkCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WorkCenters");
                });

            modelBuilder.Entity("MesApp.Domain.WorkOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Qty")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("WorkOrders");
                });

            modelBuilder.Entity("MesApp.Domain.LabTestRequest", b =>
                {
                    b.HasOne("MesApp.Domain.MaterialReceipt", "Receipt")
                        .WithMany()
                        .HasForeignKey("MaterialReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("MesApp.Domain.LabTestResult", b =>
                {
                    b.HasOne("MesApp.Domain.LabTestRequest", "Request")
                        .WithMany()
                        .HasForeignKey("LabTestRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("MesApp.Domain.MaterialReceipt", b =>
                {
                    b.HasOne("MesApp.Domain.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MesApp.Domain.BusinessPartner", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("Item");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("MesApp.Domain.PrepJob", b =>
                {
                    b.HasOne("MesApp.Domain.MaterialReceipt", "Receipt")
                        .WithMany()
                        .HasForeignKey("MaterialReceiptId");

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("MesApp.Domain.QcInspection", b =>
                {
                    b.HasOne("MesApp.Domain.MaterialReceipt", "Receipt")
                        .WithMany()
                        .HasForeignKey("MaterialReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("MesApp.Domain.WorkOrder", b =>
                {
                    b.HasOne("MesApp.Domain.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });
#pragma warning restore 612, 618
        }
    }
}
